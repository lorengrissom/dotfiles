#             _   _     _      _         
#  __ _  ___ | |_| |__ | | ___| |_ _   _ 
# / _` |/ _ \| __| '_ \| |/ _ \ __| | | |
#| (_| | (_) | |_| |_) | |  __/ |_| |_| |
# \__, |\___/ \__|_.__/|_|\___|\__|\__,_|
# |___/                                  
#       https://www.youtube.com/user/gotbletu
#       https://twitter.com/gotbletu
#       https://plus.google.com/+gotbletu
#       https://github.com/gotbletu
#       gotbleu@gmail.com
 
#-------- Common Settings {{{
#------------------------------------------------------
# how to use tmux demo video: http://www.youtube.com/watch?v=ZNM1KfqpyGo
# https://gist.github.com/1147532
# http://crunchbanglinux.org/forums/post/236199/
# https://gist.github.com/adinapoli/4723872

# change prefix key to Ctrl-a; like GNU Screen
unbind-key C-b
set-option -g prefix C-a

# goto last used window
bind-key C-a last-window

# Nested Tmux Session
# send to tmux session within another tmux session; like screen
bind-key a send-prefix

# fix delay time between tmux & vim
set-option -sg escape-time 0

# default shell
set-option -g default-command /bin/zsh
set-option -g default-shell /bin/zsh

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# edit config
bind-key e new-window -n 'conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'
bind-key '/' new-window 'man tmux'

# clear screen and scrollback history
bind-key -n C-l send-keys C-l \; run 'tmux clear-history'

# set display timelimit
set-option -g display-panes-time 2000
set-option -g display-time 1000  

# history size
set-option -g history-limit 10000

# enable shell hotkeys C-left/C-right
# http://sigizmund.com/tmux-and-c-leftc-right/
set-window-option -g xterm-keys on

# enable 256 color terminal
# http://blog.sanctum.geek.nz/256-colour-terminals/
set-option -g default-terminal "screen-256color"

#}}}
#-------- Keybinding (Vim Style) {{{
#------------------------------------------------------
# vim keys in command prompt
set-option -g status-keys vi

# select panes
bind-key k select-pane -U
bind-key h select-pane -L
bind-key j select-pane -D
bind-key l select-pane -R

# cycle windows/panes (no prefix)
bind-key -n M-k select-pane -t :.-	# prev pane
bind-key -n M-j select-pane -t :.+	# next pane
bind-key -n M-h select-window -t :-	# previous window
bind-key -n M-l select-window -t :+	# next window

# resize panes
bind-key -r J resize-pane -D 1 
bind-key -r K resize-pane -U 1 
bind-key -r H resize-pane -L 1 
bind-key -r L resize-pane -R 1 

# better pane split bindings with current path (tmux 1.9+)
bind-key \ split-window -h -c "#{pane_current_path}"	# vertical split
bind-key - split-window -v -c "#{pane_current_path}"	# horizontal split

# new window/pane with the current path (tmux 1.9+)
bind-key c new-window -c "#{pane_current_path}"

# kill window/pane without prompt
# http://unix.stackexchange.com/a/30283
bind-key & kill-window
bind-key x kill-pane


# sync panes; send what you are typing to other panes.
bind-key C-s set-window-option synchronize-panes

#}}}

#-------- Copy Mode (Vim Style) {{{
#------------------------------------------------------
# This section of hotkeys mainly work in copy mode and no where else

# vim keys in copy and choose mode
set-window-option -g mode-keys vi

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key Escape copy-mode			# enter copy mode; default [
bind-key p paste-buffer				# paste; (default hotkey: ] )
bind-key P choose-buffer 			# tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"

# set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  'bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi V send-keys -X select-line; \
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  bind-key -T choice-mode-vi h send-keys -X tree-collapse ; \
  bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"'

# vim copy mode rebinds for (tmux 2.3 or lower)
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  'bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind-key -t vi-choice h tree-collapse; \
  bind-key -t vi-choice l tree-expand; \
  bind-key -t vi-choice H tree-collapse-all; \
  bind-key -t vi-choice L tree-expand-all; \
  bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -in -selection clipboard"; \
  bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"'

#}}}

#-------- Mouse {{{
#------------------------------------------------------
# mouse to highlight and copy; to paste use prefix + ]
# http://awhan.wordpress.com/2012/04/18/tmux-copy-paste-with-mouse/

# temporarily allow regular terminal copy mode while mouse mode is enable
# visual line:  shift+mouse
# visual block: ctrl+shift+mouse <-- only works on some terminals
# visual block: ctrl+mouse <-- (while mouse mode is disable) only works on some terminals

# toggle mouse on/off
# http://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/
bind-key m \
  set-option -g mode-mouse on \;\
  set-option -g mouse-resize-pane on \;\
  set-option -g mouse-select-pane on \;\
  set-option -g mouse-select-window on \;\
  display-message 'Mouse: ON'
bind-key M \
  set-option -g mode-mouse off \;\
  set-option -g mouse-resize-pane off \;\
  set-option -g mouse-select-pane off \;\
  set-option -g mouse-select-window off \;\
  display-message 'Mouse: OFF'

# (tmux 2.1 or higher) toggle mouse mode
# https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/cw552qd
bind-key m \
	set-option -g -q mouse on \;\
	display-message 'Mouse: ON'

bind-key M \
	set-option -g -q mouse off \;\
	display-message 'Mouse: OFF'

# enable PageUp/Down as copy mode
# in ncurses app (vim,nano ..etc) then functions as normal
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"

# bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
# bind-key -t vi-copy WheelUpPane halfpage-up
# bind-key -t vi-copy WheelDownPane halfpage-down


# }}}
#-------- Window / Pane Settings {{{
#------------------------------------------------------
# start window/pane index on 1 instead of 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

# pane divider color; non active pane
set-option -g pane-border-fg green
set-option -g pane-border-bg black

# pane divider color; active pane
# helps when you have more than two panes.
# version 1.8 makes it easy to see 2 panes now
set-option -g pane-active-border-fg white
set-option -g pane-active-border-bg yellow

# make the current window the first window
bind T swap-window -t 1

# swap windows/panes
bind-key -n M-Left swap-window -t -1
bind-key -n M-Right swap-window -t +1
# bind-key -n M-Up swap-pane -U
# bind-key -n M-Down swap-pane -D

# auto renumber windows sequentially
# https://github.com/thoughtbot/dotfiles/blob/master/tmux.conf
set-option -g renumber-windows on

# set auto rename of windows base on command
#set-window-option -g automatic-rename on
# note: ohmyzsh users commet out DISABLE_AUTO_TITLE=true from zshrc to disable autorename
# http://superuser.com/questions/306028/tmux-and-zsh-custom-prompt-bug-with-window-name

#}}}
#-------- Statusbar {{{
#------------------------------------------------------

# refresh the status bar every 1 second.
set-option -g status-interval 1000

# Time messages remain in the status bar. Lower this number
# if this is too distracting.
set-option -g display-time 1000

# command/message line colors
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright

# CENTER {{{
# window notifications; display activity on other window
set-window-option -g monitor-activity on
set-option -g visual-activity on

# statusbar colors
set-option -g status-fg white
set-option -g status-bg black
set-option -g status-attr default

# window title colors; non active
set-window-option -g window-status-fg cyan
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# window title colors; active
set-window-option -g window-status-current-fg white	#font
set-window-option -g window-status-current-bg red	#boarder
set-window-option -g window-status-current-attr bright




#}}}
# LEFT SIDE {{{
# in the status bar.
set-option -g status-justify centre
set-option -g status-left-length 40
set-option -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

#}}}
# RIGHT SIDE {{{
# use "man date" to set the clock to your liking
set-option -g status-right "#[fg=blue]#(~/battery Discharging) | #[fg=cyan]%a %D %l:%M:%p"

#}}}


#}}}
#-------- External Scripts {{{
#------------------------------------------------------

# Run command on idle; screensaver
# demo video: http://www.youtube.com/watch?v=s0T82aJn1DQ
#set-option -g lock-after-time 10
#set-option -g lock-command "/usr/bin/cmatrix -C blue"

#}}}
#-------- Layout {{{
#------------------------------------------------------
# demo video: http://www.youtube.com/watch?v=sxw-n5Du600
# http://amjith.blogspot.com/2011/08/scripting-tmux-layouts.html
# http://unix.stackexchange.com/a/17118
# -v = split horizontal
# -h = split veritical

#junk template
bind-key M-j new-window -n work -c $HOME \; \
	split-window -v -p 50 -t 1  \; \
	split-window -h -p 50 -t 1  \; \
	split-window -h -p 50 -t 2  \; \
	select-pane -t 2

# email
bind-key M-e new-window -n email -c $HOME \; \
	send-keys 'mutt' 'Enter' \; \
	split-window -v -p 40 -t 1  \; \
	send-keys 'tudu' 'Enter' \; \
	select-pane -t 1

# file manager
bind-key M-f new-window -n fm -c $HOME \; \
	send-keys 'watch "tsp|tac"' 'Enter' \; \
	split-window -v -p 50 -t 1  \; \
	send-keys 'ranger' 'Enter' \; \
	select-pane -t 2

# torrent
bind-key M-t new-window -n torr -c $HOME \; \
	send-keys 'tsm-ncurse' 'Enter' \; \
	split-window -h -p 50 -t 1  \; \
	send-keys 'clear && flexget-list' 'Enter' \; \
	split-window -v -p 50 -t 1  \; \
	send-keys 'mpsyt user UCi8e0iOVk1fEOogdfu4YgfA' 'Enter' \; \
	# send-keys 'clear && figlet -c Movie Trailers && youtube-viewer -C -f -4 --results=6 -u UCi8e0iOVk1fEOogdfu4YgfA' 'Enter' \; \
	select-pane -t 2

# chat
bind-key M-c new-window -n chat -c $HOME \; \
	send-keys 'weechat-curses' 'Enter' \; \
	split-window -h -p 30 -t 1  \; \
	send-keys 'sleep 5 && tmux rename-window chat && finch' 'Enter' \; \
	select-pane -t 2

# music
bind-key M-m new-window -n music -c $HOME \; \
	send-keys '~/.cmus/cmus-cover-art/display.sh' 'Enter' \; \
	split-window -v -p 50 -t 1 \; \
	send-keys 'cmus' 'Enter' \; \
	split-window -h -p 75 -t 1 \; \
	send-keys 'sleep 3 && lyvi' 'Enter' \; \
	select-pane -t 2

# # fap
# bind-key M-f new-window -n fap -c $HOME \; \
# 	send-keys 'ranger ~/Storage/.blackbox' 'Enter' \; \
# 	split-window -v -p 50 -t 1  \; \
# 	send-keys 'clear && figlet Search Skeet CMX' 'Enter' \; \
# 	split-window -h -p 50 -t 1  \; \
# 	send-keys 'reddit_top -s pornvids' 'Enter' \; \
# 	split-window -h -p 50 -t 2  \; \
# 	send-keys 'clear && figlet Discover' 'Enter' \; \
# 	select-pane -t 2

# stats
bind-key M-y new-window -n stats -c $HOME \; \
	send-keys 'htop' 'Enter' \; \
	split-window -v -p 50 -t 1  \; \
	send-keys 'clear && figlet Freespace' 'Enter' \; \
	split-window -h -p 50 -t 1  \; \
	send-keys 't lsp | less' 'Enter' \; \
	split-window -h -p 50 -t 2  \; \
	send-keys 'df' 'Enter' \; \
	select-pane -t 2

# news
bind-key M-n new-window -n news -c $HOME \; \
	send-keys 'newsbeuter' 'Enter' \; \
	split-window -v -p 50 -t 1  \; \
	select-pane -t 1

# video
bind-key M-v new-window -n video -c $HOME \; \
	send-keys 'ranger ~/Videos' 'Enter' \; \
	split-window -v -p 50 -t 1  \; \
	send-keys 'clear && figlet youtube-viewer' 'Enter' \; \
	split-window -h -p 50 -t 1  \; \
	send-keys 'clear && figlet rtmpdump' 'Enter' \; \
	split-window -h -p 50 -t 2  \; \
	send-keys 'clear && figlet Freespace' 'Enter' \; \
	select-pane -t 2



#}}}
#-------- URL Launcher {{{
#------------------------------------------------------
# This section is for grabbing links on the current pane/window without the mouse
# and launching it with GUI or CLI browser

# w3m context view
# demo video: http://www.youtube.com/watch?v=C7YPjbrTeCs
# http://www.mail-archive.com/mutt-users@mutt.org/msg09657.html
# hit ':' to activate links; Tab or Esc+M to browse thru the links
# hit Esc then Shift+M to open GUI browser; make sure external browser is set in w3m config
# hit Q to quit without confirmation 
bind-key u capture-pane -b "w3m" \; \
	save-buffer -b "w3m" /tmp/tmux-buffer \; \
	new-window -n "w3m" '$SHELL -c "w3m < /tmp/tmux-buffer"' \; \
	delete-buffer -b "w3m"

# urlview
# demo video: http://www.youtube.com/watch?v=guB4WuVFhtY
# https://wiki.archlinux.org/index.php/Tmux#Browsing_URL.27s
# to set default browser add to ~/.urlview; COMMAND exec >> /tmp/urlview.out 2>&1; set -x; $BROWSER
bind-key U capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# urlscan context view and url view
# demo video: http://www.youtube.com/watch?v=c-3IdFufY5Q
# compact view; show links only
# bind-key y capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlscan" '$SHELL -c "urlscan -c < /tmp/tmux-buffer"'
# context view; show dialog near links
# bind-key Y capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlscan" '$SHELL -c "urlscan < /tmp/tmux-buffer"'


#}}}
#-------- Fuzzy Finder {{{
#------------------------------------------------------
bind-key b split-window "tmux lsw | percol --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux select-window -t"
bind-key B split-window "tmux ls | percol --initial-index $(tmux ls | awk \"/^$(tmux display-message -p '#{session_name}'):/ {print NR-1}\") | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux switch-client -t"

bind-key -n 'C-\' new-window -n bookmarks \; send-keys "fzf-surfraw && tmux kill-window\n"
bind-key -n 'C-]' new-window -n playonlinux \; send-keys "fzf-playonlinux && tmux kill-window\n"
bind-key -n 'M-\' new-window -n locate \; send-keys "fzf-locate && tmux kill-window\n"
# bind-key -n C-Space new-window -n applauncher \; send-keys "fzf-dmenu && tmux kill-window\n"
bind-key "'" new-window -n snippet \; send-keys "fzf-snippet && tmux kill-window\n"
bind-key '"' new-window -n multisnippet \; send-keys "fzf-multisnippet && tmux kill-window\n"
# bind-key -n C-M-Space new-window -n clipboard \; send-keys 'fzf-clipboard && tmux kill-window' 'Enter'





#}}}
#-------- Testing Area {{{
#------------------------------------------------------
# dont use C-[ because it will double bind with Escape key; ^[ = escape

# pipe pane to log file
# https://gist.github.com/napcs/1147532
# bind-key P pipe-pane -o "cat >>/tmp/#W-tmux.log" \; display-message "Toggled logging to /tmp/#W-tmux.log"

# mouse wheel scrolling -- whole window not individual panes
#set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# select panes (no prefix)
# need to try: http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# C-l by deafult clears terminal screen
#bind-key -n C-k select-pane -U
#bind-key -n C-j select-pane -D

# https://gist.github.com/snuggs/800936
# bind o select-layout "active-only"
# bind M-- select-layout "even-vertical"
# bind M-| select-layout "even-horizontal"
# bind M-r rotate-window


# http://unix.stackexchange.com/a/70798
# bind -t vi-copy y copy-pipe "xclip"



# root session auto timeout
# http://blog.killtheradio.net/technology/tmuxscreen-and-root-shells-a-new-trick-i-just-learned-tmout/

#}}}
